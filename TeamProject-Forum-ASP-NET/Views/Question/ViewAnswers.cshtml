@using PagedList;
@using PagedList.Mvc;

@using Microsoft.AspNet.Identity
@model TeamProject_Forum_ASP_NET.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "ViewAnswers";
}

<div class="container">
    <div class="row">

        <div class="col-md-2">
            @Html.Action("ListCategories", "Home")
        </div>

        <div class="col-md-8">

            <div class="row well">
                <div class="col-md-2">

                    <img src="@Model.AuthorPhotoPath" height="75" width="75" alt="Profile Photo" style="margin-top:30px" />


                    <h4>@Model.Author.UserName</h4>
                    <div>Posts: @Model.Author.PostsCount</div>
                </div>
                <div class="col-md-10">
                    <article>
                        <header>
                            <h2>
                                @Html.ActionLink(Model.Title, "ViewAnswers", "Question", new { @id = Model.Id }, null)
                            </h2>
                        </header>
                        <p>
                            @Model.Content
                        </p>
                        <footer>
                            <small>--posted on @Model.DateAdded</small>
                            <span class="pull-right">
                                @if (User.IsInRole("Admin") || Model.IsAuthor(User.Identity.Name, Model.Author.UserName))
                                {
                                    <span>@Html.ActionLink("Edit", "Edit", "Question", new { @id = Model.Id }, new { @class = "btn btn-warning btn-xs" })</span>
                                    <span>@Html.ActionLink("Delete", "Delete", "Question", new { @id = Model.Id }, new { @class = "btn btn-danger btn-xs" })</span>
                                }

                                <span>@Html.ActionLink("New Answer", "Create", "Answer", new { @id = Model.Id }, new { @class = "btn btn-primary btn-xs" })</span>
                            </span>
                        </footer>
                    </article>

                </div>
            </div>
            @Html.PagedListPager(Model.Answers, page => Url.Action("ViewAnswers", "Question", new { page }),
               new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })

            @foreach (var answer in Model.Answers)
            {
                <div class="row well">
                    <div class="col-md-2">

                        <img src="@answer.AuthorPhotoPath" height="75" width="75" alt="Profile Photo" style="margin-top:30px" />
      
                        <h4>@answer.Author.UserName</h4>
                        <div>Posts: @answer.Author.PostsCount</div>
                    </div>

                    <div class="col-md-10">
                        <article>
                            <p style="margin-top:30px">
                                @answer.Content
                            </p>
                            <footer>
                                <small>--posted on @answer.DateAdded</small>
                                <span class="pull-right">
                                    @if (User.IsInRole("Admin") || Model.IsAuthor(User.Identity.Name, answer.Author.UserName))
                                    {
                                        <span>@Html.ActionLink("Edit", "Edit", "Answer", new { @id = answer.Id }, new { @class = "btn btn-warning btn-xs" })</span>
                                        <span>@Html.ActionLink("Delete", "Delete", "Answer", new { @id = answer.Id }, new { @class = "btn btn-danger btn-xs" })</span>
                                    }
                                </span>
                            </footer>
                        </article>
                    </div>
                </div>
            }

            @Html.PagedListPager(Model.Answers, page => Url.Action("ViewAnswers", "Question", new { page }),
               new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })

        </div>
    </div>
</div>
